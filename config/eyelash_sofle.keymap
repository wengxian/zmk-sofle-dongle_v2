#define ZMK_POINTING_DEFAULT_MOVE_VAL 4200  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30    // default: 10

#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define COMBO_DEFAULT_TIMEOUT_MS 15
#define COMBO_QUICK_TIMEOUT_MS 10
#define COMBO_PRIOR_IDLE_MS 125

&mmv {
    acceleration-exponent = <1>;      // 1
    time-to-max-speed-ms = <500>;     // 300
    delay-ms = <0>;                   // 0
};

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <40>;      // 300
    delay-ms = <0>;                   // 0
};

/ {
    behaviors {
        td_shift_caps: td_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };

        meh: meh_key {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp LSHFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp LSHFT>;
        };

        hyper: hyper_key {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp LSHFT &kp LGUI>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp LSHFT &kp LGUI>;
        };

        ltkp: ltkp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <50>;
        };

        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 59 60 61 62 63>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57 3>;
        };

        scroll_encoder_vol: scroll_encoder_vol {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;

            tap-ms = <30>;
        };

        scroll_encoder_pp: scroll_encoder_pp {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_PREV>, <&kp C_NEXT>;

            tap-ms = <30>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_mouse {
            bindings = <&tog 7>;
            key-positions = <13 39>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_game {
            bindings = <&tog 1>;
            key-positions = <16 42>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_media {
            bindings = <&tog 5>;
            key-positions = <18 44>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <30 31>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_less_than {
            bindings = <&macro_less_than>;
            key-positions = <41 42>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_greater_than {
            bindings = <&macro_greater_than>;
            key-positions = <42 43>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <20 46>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_bt_clear_all {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <25 51>;
            timeout-ms = <COMBO_DEFAULT_TIMEOUT_MS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE_MS>;
        };

        combo_bootloader {
            bindings = <&bootloader>;
            key-positions = <13 25>;
        };

        combo_reset {
            bindings = <&sys_reset>;
            key-positions = <39 51>;
        };
    };

    macros {
        macro_select_all: macro_select_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_undo: macro_undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_cut: macro_cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_copy: macro_copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_paste: macro_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_redo: macro_redo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp Y>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_plus: macro_plus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_left_brace: macro_left_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp LEFT_BRACKET>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_right_brace: macro_right_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp RIGHT_BRACKET>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_underscore: macro_underscore {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp MINUS>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_percent: macro_percent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N5>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_pipe: macro_pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp BSLH>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_exclaimation_mark: macro_exclaimation_mark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N1>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_hash: macro_hash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N3>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_question_mark: macro_question_mark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp FSLH>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_less_than: macro_less_than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp COMMA>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_greater_than: macro_greater_than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp DOT>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_hyper_pg_up: macro_hyper_pg_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LALT &kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp PG_UP>,
                <&macro_release>,
                <&kp LEFT_WIN &kp LALT &kp LCTRL &kp LSHFT>;
        };

        macro_hyper_pg_dn: macro_hyper_pg_dn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LALT &kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp PG_DN>,
                <&macro_release>,
                <&kp LEFT_WIN &kp LALT &kp LCTRL &kp LSHFT>;
        };

        macro_ctrl_n: macro_ctrl_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp N>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_prev_tab: macro_prev_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp PG_UP>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_next_tab: macro_next_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp PG_DN>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_zoom_out: macro_zoom_out {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp MINUS>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_zoom_reset: macro_zoom_reset {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp N0>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_zoom_in: macro_zoom_in {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp ESC     &kp N1        &kp N2        &kp N3         &kp N4         &kp N5         &mmv MOVE_UP     &kp N6       &kp N7         &kp N8         &kp N9        &kp N0           &kp GRAVE
&kp TAB     &kp Q         &kp W         &kp E          &kp R          &kp T          &mmv MOVE_DOWN   &kp Y        &kp U          &kp I          &kp O         &kp P            &kp BSLH
&kp BSPC    &hrml LGUI A  &hrml LALT S  &hrml LCTRL D  &hrml LSHFT F  &kp G          &mmv MOVE_LEFT   &kp H        &hrmr LSHFT J  &hrmr LCTRL K  &hrmr LALT L  &hrmr LGUI SEMI  &kp APOS
&kp LSHFT   &kp Z         &kp X         &kp C          &kp V          &kp B          &mmv MOVE_RIGHT  &kp N        &kp M          &kp SLASH      &kp COMMA     &kp DOT          &kp ENTER
&kp C_MUTE  &kp LEFT_ALT  &kp LCTRL     &ltkp 2 TAB    &ltkp 3 SPACE  &ltkp 4 DEL    &mkp LCLK        &ltkp 5 DEL  &ltkp 6 BSPC   &ltkp 7 TAB    &mo 4         &kp RALT
            >;

            display-name = "BASE";
            sensor-bindings = <&scroll_encoder_vol>;
        };

        game_layer {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4     &kp N5    &trans  &kp N6  &kp N7  &kp N8     &kp N9     &kp N0    &kp GRAVE
&kp TAB    &kp Q   &kp W   &kp E   &kp R      &kp T     &trans  &kp Y   &kp U   &kp I      &kp O      &kp P     &kp BSLH
&kp BSPC   &kp A   &kp S   &kp D   &kp F      &kp G     &trans  &kp H   &kp J   &kp K      &kp L      &kp SEMI  &kp APOS
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V      &kp B     &trans  &kp N   &kp M   &kp SLASH  &kp COMMA  &kp DOT   &kp ENTER
&trans     &trans  &trans  &mo 2   &kp SPACE  &mo 4     &trans  &trans  &trans  &trans     &trans     &trans
            >;

            display-name = "GAME";
            sensor-bindings = <&scroll_encoder_vol>;
        };

        fkey_layer {
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans           &trans  &trans      &trans              &trans             &trans              &trans           &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN        &trans  &caps_word  &macro_zoom_out     &macro_zoom_reset  &macro_zoom_in      &kp SLCK         &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &key_repeat      &trans  &sk GLOBE   &macro_prev_tab     &meh               &macro_next_tab     &kp PAUSE_BREAK  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &macro_ctrl_n    &trans  &kp INS     &macro_hyper_pg_dn  &hyper             &macro_hyper_pg_up  &kp CLCK         &trans
&trans  &trans   &trans  &trans  &trans  &trans           &trans  &trans      &trans              &trans             &trans              &trans
            >;

            display-name = "FKEY";
            sensor-bindings = <&scroll_encoder_vol>;
        };

        navi_layer {
            bindings = <
&trans  &trans             &trans      &trans       &trans        &trans           &trans  &trans       &trans          &trans          &trans         &trans            &trans
&trans  &kp PAGE_UP        &kp HOME    &kp UP       &kp END       &kp PAGE_DOWN    &trans  &kp EQUAL    &kp N7          &kp N8          &kp N9         &kp N0            &trans
&trans  &macro_select_all  &kp LEFT    &kp DOWN     &kp RIGHT     &key_repeat      &trans  &macro_plus  &hrmr LSHFT N4  &hrmr LCTRL N5  &hrmr LALT N6  &hrmr LGUI ASTRK  &trans
&trans  &macro_undo        &macro_cut  &macro_copy  &macro_paste  &macro_redo      &trans  &kp MINUS    &kp N1          &kp N2          &kp N3         &kp SLASH         &trans
&trans  &trans             &trans      &trans       &trans        &trans           &trans  &trans       &trans          &trans          &trans         &trans
            >;

            display-name = "NAVI";
            sensor-bindings = <&scroll_encoder_vol>;
        };

        digit_layer {
            bindings = <
&trans  &trans            &trans         &trans          &trans          &trans         &trans  &trans       &trans      &trans       &trans        &trans             &trans
&trans  &kp EQUAL         &kp N7         &kp N8          &kp N9          &kp N0         &trans  &kp PAGE_UP  &kp HOME    &kp UP       &kp END       &kp PAGE_DOWN      &trans
&trans  &hrml LGUI ASTRK  &hrml LALT N4  &hrml LCTRL N5  &hrml LSHFT N6  &macro_plus    &trans  &key_repeat  &kp LEFT    &kp DOWN     &kp RIGHT     &macro_select_all  &trans
&trans  &kp SLASH         &kp N1         &kp N2          &kp N3          &kp MINUS      &trans  &macro_undo  &macro_cut  &macro_copy  &macro_paste  &macro_redo        &trans
&trans  &trans            &trans         &trans          &trans          &trans         &trans  &trans       &trans      &trans       &trans        &trans
            >;

            display-name = "DIGIT";
            sensor-bindings = <&scroll_encoder_vol>;
        };

        media_layer {
            bindings = <
&trans            &trans           &trans             &trans            &trans           &trans          &kp UP     &trans        &trans             &trans            &trans           &trans           &trans
&trans            &bt BT_SEL 4     &bt BT_SEL 3       &bt BT_SEL 2      &bt BT_SEL 1     &bt BT_SEL 0    &kp DOWN   &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3     &bt BT_SEL 4     &trans
&trans            &sys_reset       &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &out OUT_TOG    &kp LEFT   &out OUT_TOG  &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &sys_reset       &trans
&trans            &rgb_ug RGB_TOG  &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT       &none           &kp RIGHT  &none         &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT       &rgb_ug RGB_TOG  &trans
&kp C_PLAY_PAUSE  &trans           &trans             &trans            &trans           &trans          &trans     &trans        &trans             &trans            &trans           &trans
            >;

            display-name = "MEDIA";
            sensor-bindings = <&scroll_encoder_pp>;
        };

        symb_layer {
            bindings = <
&trans  &trans             &trans      &trans       &trans        &trans         &trans  &trans                    &trans             &trans                &trans             &trans               &trans
&trans  &kp PG_UP          &kp HOME    &kp UP       &kp END       &kp PG_DN      &trans  &macro_plus               &kp MINUS          &macro_pipe           &macro_left_brace  &macro_right_brace   &trans
&trans  &macro_select_all  &kp LEFT    &kp DOWN     &kp RIGHT     &key_repeat    &trans  &kp EQUAL                 &macro_underscore  &kp BSLH              &kp LBKT           &kp RBKT             &trans
&trans  &macro_undo        &macro_cut  &macro_copy  &macro_paste  &macro_redo    &trans  &macro_exclaimation_mark  &macro_hash        &macro_question_mark  &macro_less_than   &macro_greater_than  &trans
&trans  &trans             &trans      &trans       &trans        &trans         &trans  &trans                    &trans             &trans                &trans             &trans
            >;

            display-name = "SYMB";
            sensor-bindings = <&scroll_encoder_vol>;
        };

        mouse_layer {
            bindings = <
&trans  &trans             &trans          &trans          &trans           &trans            &kp UP     &trans           &trans          &trans          &trans           &trans             &trans
&trans  &msc SCRL_UP       &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &msc SCRL_DOWN    &kp DOWN   &macro_prev_tab  &mkp MB4        &msc SCRL_UP    &mkp MB5         &macro_zoom_in     &trans
&trans  &macro_select_all  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &key_repeat       &kp LEFT   &macro_ctrl_n    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &macro_zoom_reset  &trans
&trans  &macro_undo        &macro_cut      &macro_copy     &macro_paste     &macro_redo       &kp RIGHT  &macro_next_tab  &mkp LCLK       &mkp MCLK       &mkp RCLK        &macro_zoom_out    &trans
&trans  &trans             &trans          &mkp RCLK       &mkp MCLK        &mkp LCLK         &trans     &trans           &trans          &trans          &trans           &trans
            >;

            display-name = "MOUSE";
            sensor-bindings = <&scroll_encoder_vol>;
        };
    };
};
